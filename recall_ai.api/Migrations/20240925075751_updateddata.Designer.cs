// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using recall_ai.api.Data;

#nullable disable

namespace recall_ai.api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240925075751_updateddata")]
    partial class updateddata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.33");

            modelBuilder.Entity("recall_ai.api.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "bob.johnson@example.com",
                            FirstName = "Bob",
                            LastName = "Johnson"
                        },
                        new
                        {
                            UserId = 4,
                            Email = "alice.brown@example.com",
                            FirstName = "Alice",
                            LastName = "Brown"
                        },
                        new
                        {
                            UserId = 5,
                            Email = "charlie.davis@example.com",
                            FirstName = "Charlie",
                            LastName = "Davis"
                        },
                        new
                        {
                            UserId = 6,
                            Email = "emily.miller@example.com",
                            FirstName = "Emily",
                            LastName = "Miller"
                        },
                        new
                        {
                            UserId = 7,
                            Email = "frank.wilson@example.com",
                            FirstName = "Frank",
                            LastName = "Wilson"
                        },
                        new
                        {
                            UserId = 8,
                            Email = "grace.moore@example.com",
                            FirstName = "Grace",
                            LastName = "Moore"
                        },
                        new
                        {
                            UserId = 9,
                            Email = "henry.taylor@example.com",
                            FirstName = "Henry",
                            LastName = "Taylor"
                        },
                        new
                        {
                            UserId = 10,
                            Email = "isabella.anderson@example.com",
                            FirstName = "Isabella",
                            LastName = "Anderson"
                        });
                });

            modelBuilder.Entity("recall_ai.api.Models.UserDiary", b =>
                {
                    b.Property<int>("DiaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("InsertedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DiaryId");

                    b.ToTable("UserDiaries");

                    b.HasData(
                        new
                        {
                            DiaryId = 1,
                            InsertedOn = new DateTime(2024, 9, 25, 13, 27, 50, 786, DateTimeKind.Local).AddTicks(1571),
                            Note = "Feeling great today!",
                            UserId = 1
                        },
                        new
                        {
                            DiaryId = 11,
                            InsertedOn = new DateTime(2024, 9, 25, 13, 27, 50, 786, DateTimeKind.Local).AddTicks(1572),
                            Note = "Feeling great today!",
                            UserId = 1
                        },
                        new
                        {
                            DiaryId = 12,
                            InsertedOn = new DateTime(2024, 9, 25, 13, 27, 50, 786, DateTimeKind.Local).AddTicks(1573),
                            Note = "Feeling great today!",
                            UserId = 1
                        },
                        new
                        {
                            DiaryId = 2,
                            InsertedOn = new DateTime(2024, 9, 25, 13, 27, 50, 786, DateTimeKind.Local).AddTicks(1574),
                            Note = "Had a productive day.",
                            UserId = 2
                        },
                        new
                        {
                            DiaryId = 13,
                            InsertedOn = new DateTime(2024, 9, 25, 13, 27, 50, 786, DateTimeKind.Local).AddTicks(1575),
                            Note = "Had a productive day.",
                            UserId = 2
                        },
                        new
                        {
                            DiaryId = 14,
                            InsertedOn = new DateTime(2024, 9, 25, 13, 27, 50, 786, DateTimeKind.Local).AddTicks(1576),
                            Note = "Had a productive day.",
                            UserId = 2
                        },
                        new
                        {
                            DiaryId = 3,
                            InsertedOn = new DateTime(2024, 9, 25, 13, 27, 50, 786, DateTimeKind.Local).AddTicks(1578),
                            Note = "Feeling a bit tired.",
                            UserId = 3
                        },
                        new
                        {
                            DiaryId = 4,
                            InsertedOn = new DateTime(2024, 9, 25, 13, 27, 50, 786, DateTimeKind.Local).AddTicks(1579),
                            Note = "Excited about the upcoming event!",
                            UserId = 4
                        },
                        new
                        {
                            DiaryId = 5,
                            InsertedOn = new DateTime(2024, 9, 25, 13, 27, 50, 786, DateTimeKind.Local).AddTicks(1580),
                            Note = "Feeling stressed about work.",
                            UserId = 5
                        },
                        new
                        {
                            DiaryId = 6,
                            InsertedOn = new DateTime(2024, 9, 25, 13, 27, 50, 786, DateTimeKind.Local).AddTicks(1581),
                            Note = "Enjoyed a nice walk.",
                            UserId = 6
                        },
                        new
                        {
                            DiaryId = 7,
                            InsertedOn = new DateTime(2024, 9, 25, 13, 27, 50, 786, DateTimeKind.Local).AddTicks(1582),
                            Note = "Feeling anxious.",
                            UserId = 7
                        },
                        new
                        {
                            DiaryId = 8,
                            InsertedOn = new DateTime(2024, 9, 25, 13, 27, 50, 786, DateTimeKind.Local).AddTicks(1583),
                            Note = "Had a fun day out.",
                            UserId = 8
                        },
                        new
                        {
                            DiaryId = 9,
                            InsertedOn = new DateTime(2024, 9, 25, 13, 27, 50, 786, DateTimeKind.Local).AddTicks(1584),
                            Note = "Feeling motivated to start new projects.",
                            UserId = 9
                        },
                        new
                        {
                            DiaryId = 10,
                            InsertedOn = new DateTime(2024, 9, 25, 13, 27, 50, 786, DateTimeKind.Local).AddTicks(1585),
                            Note = "Enjoying some quiet time.",
                            UserId = 10
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
